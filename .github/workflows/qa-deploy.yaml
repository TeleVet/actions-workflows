name: QA Deployment

on:
  workflow_call:
    inputs:
      app_name:
        type: string
        description: Name of the app that is being updated.
        required: false
      app_names:
        type: string
        description: Name of the apps that are being updated separated by a comma.
        required: false
      image_tag:
        type: string
        description: Image tag that should be deployed to qa.
        required: true
      role-to-assume:
        type: string
        description: ARN of the role to assume
        required: true
      role-session-name:
        type: string
        description: Name to use for role session
        required: true
      region:
        type: string
        description: AWS region to use
        required: true
      registry:
        type: string
        description: Registry for image
        required: true
      image_name:
        type: string
        description: Name for image
        required: true
      infra_repo:
        type: string
        description: Name of the infrastructure repo
        required: false
        default: infrastructure
    secrets:
      infra_repo_key:
        required: true
      e2e_repo_access_token:
        required: false
      build_args:
        description: Same as the `build-args` input on the [Docker Build and Push](https://github.com/docker/build-push-action#build-args-input) action.
        required: false

env:
  APP_NAME: ${{ inputs.app_name }}
  APP_NAMES: ${{ inputs.app_names }}
  IMAGE_REPO: ${{ inputs.registry }}/${{ inputs.image_name }}
  IMAGE_TAG: ${{ inputs.image_tag }}

jobs:
  qa-deployment-build:
    uses: televet/actions-workflows/.github/workflows/docker-build.yaml@multi-arch-branch
    with:
      role-to-assume: ${{ inputs.role-to-assume }}
      role-session-name: ${{ inputs.role-session-name }}
      region: ${{ inputs.region }}
      registry: ${{ inputs.registry }}
      image_name: ${{ inputs.image_name }}
      image_tags: |
        type=ref,event=pr
        type=raw,value=sha-${{ github.event.pull_request.head.sha }}
    secrets: inherit

  qa-deployment:
    needs: qa-deployment-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      deployments: write
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate AWS Tools
        uses: televet/actions-workflows/.github/actions/aws-auth@main
        with:
          role-session-name: ${{ inputs.role-session-name }}
          role-to-assume: ${{ inputs.role-to-assume }}
          region: ${{ inputs.region }}

      - name: Select QA Environment
        id: select-qa-env
        uses: moonswitch/select-qa-env@v0.3.3
        with:
          cloud_provider: aws
          table: qa-envs

      - name: Checkout infrastructure repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ inputs.infra_repo }}
          ssh-key: ${{ secrets.infra_repo_key }}
          path: infrastructure

      - name: Create QA deployment config file
        env:
          QA_LANE: ${{ steps.select-qa-env.outputs.env_name }}
          QA_FILE: ${{ steps.select-qa-env.outputs.env_name }}.json
          PR_NUMBER: ${{ github.event.number }}
          PR_SHA: ${{ github.sha }}
          PR_BRANCH: ${{ github.event.pull_request.head.ref }}
          PR_REPO: ${{ github.repository }}
          URL: ${{ steps.select-qa-env.outputs.url }}
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 60
          max_attempts: 5
          retry_on: error
          command: |-
            cd ${GITHUB_WORKSPACE}/infrastructure/qa-envs
            node ./qa_apps.js add

            if [ -s "${QA_FILE}" -a -s "qa_lanes.libsonnet" ]; then
              git config user.name github-actions
              git config user.email github-actions@github.com
              git add . && git diff --cached --quiet || \
                git commit -m "[ci] Deploy PR-${{ github.event.number }} from ${{ github.repository }}" && \
                git push && \
                git status --porcelain
              echo "QA file has been updated and pushed."
            else
              echo "${QA_FILE} or qa_lanes.libsonnet is empty. Aborting job."
              exit 1
            fi

      - name: Create QA Deployment
        uses: altinukshini/deployment-action@v1.2.6
        id: deployment
        with:
          pr: true
          pr_id: ${{ github.event.number }}
          transient_environment: true
          token: "${{ github.token }}"
          target_url: https://${{ steps.select-qa-env.outputs.url }}
          environment: ${{ steps.select-qa-env.outputs.env_name }}
          initial_status: success
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Create Clinic Web Playwright Commit Check
        id: clinic-web-check-id
        if: ${{ github.repository == 'TeleVet/clinic-web' }}
        uses: LouisBrunner/checks-action@v1.6.2
        with:
          token: ${{ github.token }}
          name: Playwright UI Tests
          status: in_progress
          sha: ${{ github.event.pull_request.head.sha }}
      
      - name: Create Care Web Playwright Commit Check
        id: care-web-check-id
        if: ${{ github.repository == 'TeleVet/care-web' }}
        uses: LouisBrunner/checks-action@v1.6.2
        with:
          token: ${{ github.token }}
          name: Playwright UI Tests
          status: in_progress
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Create Core Api Playwright Commit Check
        id: core-api-check-id
        if: ${{ github.repository == 'TeleVet/core-api' }}
        uses: LouisBrunner/checks-action@v1.6.2
        with:
          token: ${{ github.token }}
          name: Playwright UI Tests
          status: in_progress
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Create Core Jobs Playwright Commit Check
        id: core-jobs-check-id
        if: ${{ github.repository == 'TeleVet/core-jobs' }}
        uses: LouisBrunner/checks-action@v1.6.2
        with:
          token: ${{ github.token }}
          name: Playwright UI Tests
          status: in_progress
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Create Payments Api Playwright Commit Check
        id: payments-api-check-id
        if: ${{ github.repository == 'TeleVet/payments-api' }}
        uses: LouisBrunner/checks-action@v1.6.2
        with:
          token: ${{ github.token }}
          name: Playwright UI Tests
          status: in_progress
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Create Search Api Playwright Commit Check
        id: search-api-check-id
        if: ${{ github.repository == 'TeleVet/search-api' }}
        uses: LouisBrunner/checks-action@v1.6.2
        with:
          token: ${{ github.token }}
          name: Playwright UI Tests
          status: in_progress
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Run Playwright Automated Tests Clinic Web
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.repository == 'TeleVet/clinic-web' }}
        with:
          token: ${{ secrets.E2E_REPO_ACCESS_TOKEN }}
          repository: TeleVet/e2e-tests
          event-type: playwright-automation-tests
          client-payload: '{"ref": "${{ github.event.pull_request.head.ref }}", "sha": "${{ github.event.pull_request.head.sha }}", "repository": "${{ github.repository }}", "user": "${{ github.actor }}", "qa_lane": "${{ steps.select-qa-env.outputs.env_name }}", "tests": "all", "check_id": "${{ steps.clinic-web-check-id.outputs.check_id }}"}'

      - name: Run Playwright Automated Tests Care Web
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.repository == 'TeleVet/care-web' }}
        with:
          token: ${{ secrets.E2E_REPO_ACCESS_TOKEN }}
          repository: TeleVet/e2e-tests
          event-type: playwright-automation-tests
          client-payload: '{"ref": "${{ github.event.pull_request.head.ref }}", "sha": "${{ github.event.pull_request.head.sha }}", "repository": "${{ github.repository }}", "user": "${{ github.actor }}", "qa_lane": "${{ steps.select-qa-env.outputs.env_name }}", "tests": "all", "check_id": "${{ steps.care-web-check-id.outputs.check_id }}"}'
  
      - name: Run Playwright Automated Tests Core Api
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.repository == 'TeleVet/core-api' }}
        with:
          token: ${{ secrets.E2E_REPO_ACCESS_TOKEN }}
          repository: TeleVet/e2e-tests
          event-type: playwright-automation-tests
          client-payload: '{"ref": "${{ github.event.pull_request.head.ref }}", "sha": "${{ github.event.pull_request.head.sha }}", "repository": "${{ github.repository }}", "user": "${{ github.actor }}", "qa_lane": "${{ steps.select-qa-env.outputs.env_name }}", "tests": "all", "check_id": "${{ steps.core-api-check-id.outputs.check_id }}"}'
  
      - name: Run Playwright Automated Tests Core Jobs
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.repository == 'TeleVet/core-jobs' }}
        with:
          token: ${{ secrets.E2E_REPO_ACCESS_TOKEN }}
          repository: TeleVet/e2e-tests
          event-type: playwright-automation-tests
          client-payload: '{"ref": "${{ github.event.pull_request.head.ref }}", "sha": "${{ github.event.pull_request.head.sha }}", "repository": "${{ github.repository }}", "user": "${{ github.actor }}", "qa_lane": "${{ steps.select-qa-env.outputs.env_name }}", "tests": "all", "check_id": "${{ steps.core-jobs-check-id.outputs.check_id }}"}'

      - name: Run Playwright Automated Tests Payments Api
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.repository == 'TeleVet/payments-api' }}
        with:
          token: ${{ secrets.E2E_REPO_ACCESS_TOKEN }}
          repository: TeleVet/e2e-tests
          event-type: playwright-automation-tests
          client-payload: '{"ref": "${{ github.event.pull_request.head.ref }}", "sha": "${{ github.event.pull_request.head.sha }}", "repository": "${{ github.repository }}", "user": "${{ github.actor }}", "qa_lane": "${{ steps.select-qa-env.outputs.env_name }}", "tests": "all", "check_id": "${{ steps.payments-api-check-id.outputs.check_id }}"}'

      - name: Run Playwright Automated Tests Search Api
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.repository == 'TeleVet/search-api' }}
        with:
          token: ${{ secrets.E2E_REPO_ACCESS_TOKEN }}
          repository: TeleVet/e2e-tests
          event-type: playwright-automation-tests
          client-payload: '{"ref": "${{ github.event.pull_request.head.ref }}", "sha": "${{ github.event.pull_request.head.sha }}", "repository": "${{ github.repository }}", "user": "${{ github.actor }}", "qa_lane": "${{ steps.select-qa-env.outputs.env_name }}", "tests": "all", "check_id": "${{ steps.search-api-check-id.outputs.check_id }}"}'
